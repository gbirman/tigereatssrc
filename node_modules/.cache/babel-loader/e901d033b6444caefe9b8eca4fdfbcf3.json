{"ast":null,"code":"import _classCallCheck from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/src/components/DashboardPage.js\";\nimport React from 'react';\nimport FilterExpansionsModule from './FilterExpansionsModule';\nimport TableModule from './TableModule';\n\nvar DashboardPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardPage, _React$Component);\n\n  function DashboardPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashboardPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashboardPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      restrictions: {}\n    };\n\n    _this.handleFilterRequest = function (field, value) {\n      console.log(_this.state.restrictions);\n      var rest = _this.restrictions; // value is in restrictions, so removes it, and potentially field too\n\n      if (field in rest && rest[field].includes(value)) {\n        var index = rest[field].indexOf(value);\n        rest[field].splice(index, 1);\n\n        if (rest[field].length === 0) {\n          delete rest[field];\n        }\n      } // value is not in restrictions, so adds it\n      else if (field in rest && !rest[field].includes(value)) {\n          rest[field].push(value);\n        } // field isn't in restrictions, so adds it and value\n        else {\n            rest.field = value;\n          }\n\n      _this.setState({\n        restrictions: rest\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DashboardPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(FilterExpansionsModule, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(TableModule, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DashboardPage;\n}(React.Component);\n\nexport { DashboardPage as default };","map":{"version":3,"sources":["/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/src/components/DashboardPage.js"],"names":["React","FilterExpansionsModule","TableModule","DashboardPage","state","restrictions","handleFilterRequest","field","value","console","log","rest","includes","index","indexOf","splice","length","push","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEqBC,a;;;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE;AADV,K;;UAIRC,mB,GAAsB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWC,YAAvB;AACA,UAAIM,IAAI,GAAG,MAAKN,YAAhB,CAFoC,CAIpC;;AACA,UAAIE,KAAK,IAAII,IAAT,IAAiBA,IAAI,CAACJ,KAAD,CAAJ,CAAYK,QAAZ,CAAqBJ,KAArB,CAArB,EAAkD;AAC9C,YAAMK,KAAK,GAAGF,IAAI,CAACJ,KAAD,CAAJ,CAAYO,OAAZ,CAAoBN,KAApB,CAAd;AACAG,QAAAA,IAAI,CAACJ,KAAD,CAAJ,CAAYQ,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;;AAEA,YAAIF,IAAI,CAACJ,KAAD,CAAJ,CAAYS,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,iBAAOL,IAAI,CAACJ,KAAD,CAAX;AACH;AACJ,OAPD,CASA;AATA,WAUK,IAAIA,KAAK,IAAII,IAAT,IAAiB,CAACA,IAAI,CAACJ,KAAD,CAAJ,CAAYK,QAAZ,CAAqBJ,KAArB,CAAtB,EAAmD;AACpDG,UAAAA,IAAI,CAACJ,KAAD,CAAJ,CAAYU,IAAZ,CAAiBT,KAAjB;AACH,SAFI,CAIL;AAJK,aAKA;AACDG,YAAAA,IAAI,CAACJ,KAAL,GAAaC,KAAb;AACH;;AAED,YAAKU,QAAL,CAAc;AACVb,QAAAA,YAAY,EAAEM;AADJ,OAAd;AAGH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EA1CsCX,KAAK,CAACmB,S;;SAA5BhB,a","sourcesContent":["import React from 'react';\nimport FilterExpansionsModule from './FilterExpansionsModule';\nimport TableModule from './TableModule';\n\nexport default class DashboardPage extends React.Component {\n\n    state = {\n        restrictions: {}\n    };\n\n    handleFilterRequest = (field, value) => {\n        console.log(this.state.restrictions);\n        let rest = this.restrictions;\n\n        // value is in restrictions, so removes it, and potentially field too\n        if (field in rest && rest[field].includes(value)) {\n            const index = rest[field].indexOf(value);\n            rest[field].splice(index, 1);\n\n            if (rest[field].length === 0) {\n                delete rest[field];\n            }\n        }\n\n        // value is not in restrictions, so adds it\n        else if (field in rest && !rest[field].includes(value)) {\n            rest[field].push(value);\n        }\n\n        // field isn't in restrictions, so adds it and value\n        else {\n            rest.field = value;\n        }\n\n        this.setState({\n            restrictions: rest\n        });\n    } \n    \n    render() {\n        return (\n            <div>\n                <FilterExpansionsModule />\n                <TableModule />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}