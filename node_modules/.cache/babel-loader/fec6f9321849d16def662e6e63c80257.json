{"ast":null,"code":"import _classCallCheck from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/src/components/ExpansionModule.js\";\nimport React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid'; // ON QUERY, SEND BACK LIST OF PARAMS FOR EACH FIELD THAT CAN BE INCLUDED, AS OPPOSED THAT CANT BE\n\nvar ExpansionModule =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExpansionModule, _React$Component);\n\n  function ExpansionModule() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ExpansionModule);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ExpansionModule)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      options: [],\n      queryParams: [],\n      clickedChips: []\n    };\n    return _this;\n  }\n\n  _createClass(ExpansionModule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ops = []; // take the prop giving the criteria, query the db for all the unique values of that variable, \n      // and put them in a sorted array\n\n      if (this.props.criteria === 'gender') ops = ['Male', 'Female'];else if (this.props.criteria === 'team') ops = ['Soccer', 'Bball', 'Tennis'];else if (this.props.criteria === 'class_year') ops = [2019, 2020, 2021, 2022]; // set clicked array\n\n      var bools = [];\n\n      for (op in ops) {\n        bools.push(true);\n      }\n\n      this.setState(function () {\n        return {\n          options: ops,\n          queryParams: ops,\n          clickedChips: bools\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.criteria)), React.createElement(ExpansionPanelDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.options.map(function (option) {\n        return React.createElement(Chip, {\n          label: option,\n          icon: React.createElement(DoneIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }),\n          clickable: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return ExpansionModule;\n}(React.Component);\n\nexport { ExpansionModule as default };","map":{"version":3,"sources":["/Users/PauloFrazao/Desktop/tiger_eats_alpha_2/src/components/ExpansionModule.js"],"names":["React","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Chip","Typography","ExpandMoreIcon","DoneIcon","Grid","ExpansionModule","state","options","queryParams","clickedChips","ops","props","criteria","bools","op","push","setState","map","option","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAEA;;IAGqBC,e;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,YAAY,EAAE;AAHV,K;;;;;;wCAMY;AAChB,UAAIC,GAAG,GAAG,EAAV,CADgB,CAGhB;AACA;;AACA,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,QAA5B,EAAsCF,GAAG,GAAG,CAAC,MAAD,EAAS,QAAT,CAAN,CAAtC,KACK,IAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,MAA5B,EAAoCF,GAAG,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAN,CAApC,KACA,IAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,YAA5B,EAA0CF,GAAG,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAN,CAP/B,CAShB;;AACA,UAAIG,KAAK,GAAG,EAAZ;;AACA,WAAKC,EAAL,IAAWJ,GAAX;AAAgBG,QAAAA,KAAK,CAACE,IAAN,CAAW,IAAX;AAAhB;;AAEA,WAAKC,QAAL,CAAc;AAAA,eAAO;AACjBT,UAAAA,OAAO,EAAEG,GADQ;AAEjBF,UAAAA,WAAW,EAAEE,GAFI;AAGjBD,UAAAA,YAAY,EAAEI;AAHG,SAAP;AAAA,OAAd;AAKH;;;6BAEQ;AAEL,aACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,qBAAD;AAAuB,QAAA,UAAU,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa,KAAKF,KAAL,CAAWC,QAAxB,CADJ,CADJ,EAII,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKN,KAAL,CAAWC,OAAX,CAAmBU,GAAnB,CAAuB,UAACC,MAAD;AAAA,eACnB,oBAAC,IAAD;AACI,UAAA,KAAK,EAAEA,MADX;AAEI,UAAA,IAAI,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFV;AAGI,UAAA,SAAS,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,OAAvB,CAFR,CADJ,CAJJ,CADJ;AAoBH;;;;EAjDwCtB,KAAK,CAACuB,S;;SAA9Bd,e","sourcesContent":["import React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\n\n// ON QUERY, SEND BACK LIST OF PARAMS FOR EACH FIELD THAT CAN BE INCLUDED, AS OPPOSED THAT CANT BE\n\n\nexport default class ExpansionModule extends React.Component {\n    state = {\n        options: [],\n        queryParams: [],\n        clickedChips: []\n    };\n\n    componentDidMount() {\n        let ops = [];\n\n        // take the prop giving the criteria, query the db for all the unique values of that variable, \n        // and put them in a sorted array\n        if (this.props.criteria === 'gender') ops = ['Male', 'Female'];\n        else if (this.props.criteria === 'team') ops = ['Soccer', 'Bball', 'Tennis'];\n        else if (this.props.criteria === 'class_year') ops = [2019, 2020, 2021, 2022];\n\n        // set clicked array\n        let bools = [];\n        for (op in ops) bools.push(true);\n\n        this.setState(() => ({\n            options: ops,\n            queryParams: ops,\n            clickedChips: bools\n        }));\n    }\n\n    render() {\n\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>{this.props.criteria}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Grid container>\n                        {\n                            this.state.options.map((option) => (\n                                <Chip\n                                    label={option}\n                                    icon={<DoneIcon />}\n                                    clickable>\n                                </Chip>\n                            ))\n                        }\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>  \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}