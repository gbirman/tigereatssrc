{"ast":null,"code":"import _classCallCheck from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/src/components/DayHolder.js\";\nimport React from 'react';\nimport DayDetails from './DayDetails';\nimport MealBreakfast from './MealBreakfast';\nimport MealLunch from './MealLunch';\nimport MealDinner from './MealDinner'; // How are servings stored?\n\nvar DayHolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DayHolder, _React$Component);\n\n  function DayHolder() {\n    _classCallCheck(this, DayHolder);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DayHolder).apply(this, arguments));\n  }\n\n  _createClass(DayHolder, [{\n    key: \"render\",\n    // TODO: Only display meals if they exist/were logged\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        border: \"3\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(DayDetails, {\n        date: this.props.dayInfo.date,\n        cals: this.props.dayInfo.cals,\n        protein: this.props.dayInfo.protein,\n        carbs: this.props.dayInfo.carbs,\n        fat: this.props.dayInfo.fat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(MealBreakfast, {\n        cals: \"400\",\n        protein: \"45\",\n        carbs: \"100\",\n        fat: \"10\",\n        food: this.props.dayInfo.breakfastFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(MealLunch, {\n        cals: \"650\",\n        protein: \"60\",\n        carbs: \"120\",\n        fat: \"15\",\n        food: this.props.dayInfo.lunchFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(MealDinner, {\n        cals: \"800\",\n        protein: \"14\",\n        carbs: \"40\",\n        fat: \"25\",\n        food: this.props.dayInfo.dinnerFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return DayHolder;\n}(React.Component);\n\nexport { DayHolder as default };","map":{"version":3,"sources":["/Users/PauloFrazao/Desktop/tiger_eats_alpha_3/src/components/DayHolder.js"],"names":["React","DayDetails","MealBreakfast","MealLunch","MealDinner","DayHolder","props","dayInfo","date","cals","protein","carbs","fat","breakfastFood","lunchFood","dinnerFood","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;IACqBC,S;;;;;;;;;;;;;AAEjB;6BACU;AAEN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,MAAM,EAAG,GAAhB;AAAoB,QAAA,KAAK,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACA,QAAA,IAAI,EAAI,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAD3B;AAEA,QAAA,IAAI,EAAI,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,IAF3B;AAGA,QAAA,OAAO,EAAI,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAH9B;AAIA,QAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,KAJ5B;AAKA,QAAA,GAAG,EAAI,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,GAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,aAAD;AACJ,QAAA,IAAI,EAAI,KADJ;AAEJ,QAAA,OAAO,EAAG,IAFN;AAGJ,QAAA,KAAK,EAAG,KAHJ;AAIJ,QAAA,GAAG,EAAG,IAJF;AAKJ,QAAA,IAAI,EAAI,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,aALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,SAAD;AACJ,QAAA,IAAI,EAAI,KADJ;AAEJ,QAAA,OAAO,EAAG,IAFN;AAGJ,QAAA,KAAK,EAAG,KAHJ;AAIJ,QAAA,GAAG,EAAG,IAJF;AAKJ,QAAA,IAAI,EAAI,KAAKP,KAAL,CAAWC,OAAX,CAAmBO,SALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CARJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,UAAD;AACJ,QAAA,IAAI,EAAI,KADJ;AAEJ,QAAA,OAAO,EAAG,IAFN;AAGJ,QAAA,KAAK,EAAG,IAHJ;AAIJ,QAAA,GAAG,EAAG,IAJF;AAKJ,QAAA,IAAI,EAAI,KAAKR,KAAL,CAAWC,OAAX,CAAmBQ,UALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAhBJ,CAXJ,CADJ,CADJ;AA0CH;;;;EA/CkCf,KAAK,CAACgB,S;;SAAxBX,S","sourcesContent":["import React from 'react';\nimport DayDetails from './DayDetails';\nimport MealBreakfast from './MealBreakfast';\nimport MealLunch from './MealLunch';\nimport MealDinner from './MealDinner';\n\n// How are servings stored?\nexport default class DayHolder extends React.Component {\n\n    // TODO: Only display meals if they exist/were logged\n    render () {\n    \n        return (\n            <div>\n                <table border = \"3\" align=\"center\">\n                    <tr>\n                        <DayDetails \n                        date = {this.props.dayInfo.date} \n                        cals = {this.props.dayInfo.cals}\n                        protein = {this.props.dayInfo.protein}\n                        carbs = {this.props.dayInfo.carbs}\n                        fat = {this.props.dayInfo.fat}\n                        />\n                    </tr>\n\n                    <tr>\n                        <td><MealBreakfast \n                        cals  = \"400\"\n                        protein = \"45\"\n                        carbs = \"100\"\n                        fat = \"10\"\n                        food = {this.props.dayInfo.breakfastFood}\n                        /></td>\n                        <td><MealLunch \n                        cals  = \"650\"\n                        protein = \"60\"\n                        carbs = \"120\"\n                        fat = \"15\"\n                        food = {this.props.dayInfo.lunchFood}\n\n                        /></td>\n                        <td><MealDinner \n                        cals  = \"800\"\n                        protein = \"14\"\n                        carbs = \"40\"\n                        fat = \"25\"\n                        food = {this.props.dayInfo.dinnerFood}\n\n                        /></td>\n                        \n                    </tr>\n\n                </table>\n            </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}